#!/bin/bash
#
# generateMakefiles.sh by Nil Geisweiller
#
# That script generates Makefile.flymake (or rather Makefile for now)
# all over the CMake project.
# It takes 1 argument, the name of the building dir
if [ ! -n "${1}" ]; then
    echo "Wrong number of argument"
    echo "Usage: ${0} BUILD_DIR_NAME"
    exit 1
else
    BUILD_NAME="${1}"
fi
 
#MAKEFILE_NAME="Makefile.flymake"
MAKEFILE_NAME="Makefile"
 
# for each CMakeLists.txt found from the current directory
# create the associated Makefile.flymake (or rather Makefile for now).
while read -r -d $'\0' FILEPATH
do
    RELATIVE_MAKEFILE_DIR=${FILEPATH%/*}
    LAST_DIR=${RELATIVE_MAKEFILE_DIR##*/}
    FLAGS_DIR="${PWD}/${BUILD_NAME}/${RELATIVE_MAKEFILE_DIR}/CMakeFiles/${LAST_DIR}.dir/"
    # write the content of the Makefile
    echo "# Automatically generated by ${0}, you may remove it using removeMakefiles.sh as you please" > "${RELATIVE_MAKEFILE_DIR}/${MAKEFILE_NAME}"
    echo "include ${FLAGS_DIR}flags.make" >> "${RELATIVE_MAKEFILE_DIR}/${MAKEFILE_NAME}"
    echo "check-syntax:" >> "${RELATIVE_MAKEFILE_DIR}/${MAKEFILE_NAME}"
    echo -e "\tc++ -o /dev/null \${CXX_FLAGS} \${CXX_DEFINES} -S \${CHK_SOURCES}" >> "${RELATIVE_MAKEFILE_DIR}/${MAKEFILE_NAME}"
    echo ".PHONY: check-syntax" >> "${RELATIVE_MAKEFILE_DIR}/${MAKEFILE_NAME}"    
done < <( find . -name "CMakeLists.txt" -print0 )
 
exit 0